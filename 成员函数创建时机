class person1

{

    public:

    void showperson1()

    {

        cout << "person1 的调用" << endl;

    }

};

class person2

{

    public:

    void showperson2()

    {

        cout << "person2 的调用" << endl;

    }

};

template<class T>

class myclass

{

    public:

    T obj;

    void func1()

    {

        obj.showperson1();

    }

    void func2()

    {

        obj.showperson2();

    }

};

//成员函数 一开始不会创建出来 而是在运行时才去创建

void test2()

{

    myclass<person1>m;

    m.func1();

    m.func2();

}

