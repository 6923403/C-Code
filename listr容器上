

输出0-9





#include <list>

void printlist(list<int> &m)

{

    for(list<int>::iterator it = m.begin(); it != m.end(); it++)

    {

        cout << *it << " " ;

    }

    cout << endl;

}

void test1()

{

    list<int> m(10, 10); //打印10个10

    list<int> m2(m.begin(), m.end());

    printlist(m); //10 10 10 ....

    printlist(m2); // 10 10 10...

    m2.push_back(666);



    //逆向打印

    for(list<int> ::reverse_iterator it2 = m2.rbegin(); it2 != m2.rend(); it2++)

    {

        cout << *it2 << " " ;

    }

    cout << endl;

    //list 迭代器不支持随机访问   

    // list<int>::iterator itbegin = m2.begin();

    // itbegin = itbegin + 1;

    //插入数据

    list<int> m3;

    m3.push_back(10); //尾插

    m3.push_back(20);

    m3.push_back(30);

    m3.push_front(66); //首插

    m3.push_front(77);

    printlist(m3); // 77 66 10 20 30 

    //删除一个数据

    m3.pop_back(); //尾删

    m3.pop_front(); //头删

    m3.insert(m3.begin(), 1000); //插入1000

    printlist(m3);

    m3.remove(20); //删除容器中指定元素

    printlist(m3);

}

void test2()

{

    //插入数据

    list<int> m3;

    m3.push_back(10); //尾插

    m3.push_back(20);

    m3.push_back(30);

    m3.push_front(66); //首插

    m3.push_front(77);

    cout << m3.size() << endl;

    if(m3.empty())

    {

        cout << "NULL " << endl;

    }

    else

    cout << "NO NULL " << endl ;

    m3.resize(10);

    printlist(m3);

    m3.resize(3);

    printlist(m3);

    list<int> m4;

    m4.assign(m3.begin(), m3.end());

    cout << "front " << m4.front() << endl;

    cout << "back " << m4.back() << endl;

}
