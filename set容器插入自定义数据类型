class person

{

    public:

    person(string name, int age)

    {

        this -> m_name = name;

        this -> m_age = age;

    }

    string m_name;

    int m_age;

};

class mycompare2

{

    public:

    bool operator()(const person & p1, const person & p2)

    {

        if(p1.m_age > p2.m_age) //降序

        {

            return true;

        }

        return false;

    }

};

void test4()

{

    set<person,mycompare2> p;

    person p1("sss", 35);

    person p2("aaa", 10);

    person p3("bbb", 20);

    person p4("ccc", 46);

    person p5("ddd", 82);

    p.insert(p1);

    p.insert(p2);

    p.insert(p3);

    p.insert(p4);

    p.insert(p5);

    //插入自定义数据类型 需要指定排序规则

    //显示

    for(set<person, mycompare2>::iterator it = p.begin(); it != p.end(); it++)

    {

        cout << "姓名: " << (*it).m_name << "年龄： " << it -> m_age << endl;

    }

}

