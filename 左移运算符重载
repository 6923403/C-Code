person.h

#include <iostream>

using namespace std;

class person

{

friend ostream & operator <<(ostream &cout, person & p1);

public:

person();

person(int a, int b);

/*void operate<<();

重载左移运算符不可以写在成员函数中

*/

private://公共变私有

int m_a;

int m_b;

};

------------------------*
person.cpp

#include "person.h"

person::person()

{

}

person::person(int a, int b)

{

this -> m_a = a;

this -> m_b = b;

}

//

//void person::operate<<()

//{

//

//
}

*-----------------------*--
main.cpp

ostream & operator <<(ostream &cout, person & p1) //第一个参数cout 第二个参数p1

{

cout << "m_a = " << p1.m_a << " m_b = " << p1.m_b ;

return cout;

}

void test1()

{

person p1(10, 100);

cout << p1 << endl; //endl; 返回word void operator 改为 ostream & operator;

//cout << p1 << endl;   没有与这些操作数匹配的 "<<" 运算符 需要重载

}
